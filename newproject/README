# Sistema de Gerenciamento de Eventos

Este √© um projeto Full-Stack que inclui um backend robusto constru√≠do com Node.js e Express, e um frontend moderno desenvolvido com React e Vite.

## üöÄ Stack de Tecnologias

O projeto utiliza uma variedade de tecnologias modernas para garantir performance, seguran√ßa e uma √≥tima experi√™ncia de desenvolvimento.

### Backend

*   **[Node.js](https://nodejs.org/)**: Ambiente de execu√ß√£o JavaScript no servidor.
*   **[Express.js](https://expressjs.com/)**: Framework web minimalista para a cria√ß√£o da API REST.
*   **[MongoDB](https://www.mongodb.com/)**: Banco de dados NoSQL orientado a documentos.
*   **[Mongoose](https://mongoosejs.com/)**: ODM (Object Data Modeling) para modelar os dados da aplica√ß√£o para o MongoDB.
*   **Autentica√ß√£o**:
    *   **[Passport.js](http://www.passportjs.org/)**: Middleware de autentica√ß√£o modular.
    *   **[JSON Web Tokens (JWT)](https://jwt.io/)**: Para autentica√ß√£o segura baseada em tokens.
    *   **[Passport-Local](https://github.com/jaredhanson/passport-local)**: Estrat√©gia para autentica√ß√£o com usu√°rio e senha.
    *   **[Passport-Google-OAuth20](https://github.com/jaredhanson/passport-google-oauth2)**: Estrat√©gia para login com contas Google.
    *   **[Bcrypt.js](https://github.com/dcodeIO/bcrypt.js)**: Para hashing e seguran√ßa de senhas.
*   **[Express Validator](https://express-validator.github.io/docs/)**: Middleware para valida√ß√£o e sanitiza√ß√£o de dados de entrada.
*   **[CORS](https://github.com/expressjs/cors)**: Middleware para habilitar o Cross-Origin Resource Sharing.
*   **[Dotenv](https://github.com/motdotla/dotenv)**: Para gerenciar vari√°veis de ambiente.

### Frontend

*   **[React](https://react.dev/)**: Biblioteca para constru√ß√£o de interfaces de usu√°rio.
*   **[Vite](https://vitejs.dev/)**: Ferramenta de build e servidor de desenvolvimento extremamente r√°pido.
*   **[ESLint](https://eslint.org/)**: Ferramenta para an√°lise est√°tica de c√≥digo, garantindo qualidade e padroniza√ß√£o.

### Testes (Backend)

*   **[Jest](https://jestjs.io/)**: Framework de testes para JavaScript.
*   **[Supertest](https://github.com/ladjs/supertest)**: Biblioteca para testar endpoints de API HTTP.
*   **[MongoDB Memory Server](https://github.com/nodkz/mongodb-memory-server)**: Inicia uma inst√¢ncia do MongoDB em mem√≥ria para executar testes de forma isolada e r√°pida.

## üìÇ Estrutura do Projeto

O projeto est√° organizado em duas pastas principais na raiz:

```
./
‚îú‚îÄ‚îÄ backend/         # Cont√©m todo o c√≥digo da API Node.js/Express
‚îú‚îÄ‚îÄ frontend/        # Cont√©m a aplica√ß√£o React
‚îú‚îÄ‚îÄ package.json     # Gerencia as depend√™ncias e scripts de ambos
‚îî‚îÄ‚îÄ README.md
```

## ‚öôÔ∏è Pr√©-requisitos

*   **[Node.js](https://nodejs.org/)** (vers√£o 18 ou superior)
*   **[NPM](https://www.npmjs.com/)** (geralmente vem com o Node.js)


